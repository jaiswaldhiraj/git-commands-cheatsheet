//*** TO CONFIGURE NAME AND EMAIL***//

	" TO LET THE PROGRAMMER KNOW WHO MADE THE CHANGES AND WHEN "
		-> git config --global user.name <YOUR_NAME>
		-> git config --global user.email <YOUR_EMAIL>





//*** GIT INIT (" TO INITIALIZE THE GIT ")***//

	" TO INITIALIZE OR SETUP THE GIT IN THE PROJECT "
		-> git init





//*** GIT ADD (" TO ADD THE FILE IN THE PROJECT AT STATING AREA ") ***//

	" TO ADD THE FILE WHICH IS CREATED TO THE GIT "
		-> git add <FILE_NAME>   -   ("SINGLE FILE")
		-> git add .             -   ("FOR ALL FILES")





//*** GIT STATUS (" TO SHOW THE CURRENT STATUS OF PROJECT ") ***//

	" TO SHOW THE STATUS OF THE FILE "
		-> git status            -   ("TO SHOW THE BASIC INFO")
		-> git status -s         -   ("TO FILES IN "M " (green) AND "M" (red)FORMATE MODIFY")
								.. green means modified in the staging area and red means in the working tree






//*** GIT COMMIT (" TO MAKE THE FILE STAGED OR TO SAVE OR UPLOAD TO GIT ") ***//

	" TO ADD THE UPDATE FILE OR ADD THE CREATED FILE "
		-> git commit -m "<ENTER YOUR UODATE NOTICE>"   -   ("FOR ALL FILES STAGED CHANGES")   ..You have already staged your changes using git add.
		-> git commit -m "<YOUR_TITLE>" -m "<ENTER YOUR UPDATE NOTICE>"
		-> git commit -a -m "<ENTER YOUR UODATE NOTICE>"                                       ..You want to commit all modified & deleted files without manually staging them.






//*** CHECK-OUT (TO UNDO CHANGES) ***//

	" TO UNDO THE CHANGES THE AS PER THE OLD CODE IF BY MISTAKELY YOU CHANGED THE CODE "
		-> git checkout <FILE_NAME>   -   ("SINGLE FILE")
		-> git checkout -f            -   ("FOR ALL FILES")






//*** GIT LOG (TO SEE CHANGES) ***//

	" TO KNOW WHO MADE THE CHENGES TO THE FILE IN THE DAY "
		-> git log                                                 -    (" TO GET THE ALL LOG ")
		-> git log -p -<NUMBER_OF_LOG_YOU_WANT_TO_SEE_FROM_LAST>   -    (" TO GET THE PARTICULAR LOG FROM THE LAST UPDATED")	






//*** GIT DIF (TO COMPARE THE CHANGES) ***//

	" TO COMPARE YOU FILE FROM THE STAGING AREA TO SEE WHAT CHAGNES ARE MADE AND DIFFERENCE BETWEEN TO FILES "
		-> git diff             -    (" TO GET THE ALL LOG ")
		-> git diff --staged   -    (" TO GET DIFFERNCE BETWEEN STAGING AREA AND LAST COMMIT")






//*** GIT DIF (TO REMOVE THE FILES) ***//

	" TO REMOVE THE FILE FROM THE STAGING AREA AND FROM THE PROJECT "
		-> git rm --cached            -    (" TO REMOVE FROM STAGING AREA")
		-> git rm		      -    (" TO REMOVE FROM THE FOLDER")







//*** GIT IGNORE (IGNORE THE FILES) ***//

	" TO IGNORE THE FILES YOU DONT WANT TO PUSH IN THE GIT "
		-> touch .gitignore            -    (" TO MAKE THE FOLDER WHICH CONTAIN ALL THE FILES TO BE IGNORE WHILE PUHSING ")







/*** GIT BRANCH ( CREATE A BRANCH) ***//

	" TO MAKE LIKE A COPY OF SOURCE CODE "
		-> git branch <BRANCH_NAME>        -    (" TO CREATE A BRANCH ")
		-> git checkout <BRANCH_NAME>      -    (" TO SHIFT TO ANOTHER BRANCH ")
		-> git branch		           -    (" TO SEE BRANCHES ")
		-> git merge <BRANCH_NAME> 	   -    (" TO MERGE THE CHANGES TO THE master BRANCH ")
		-> git checkout -b <BRANCH_NAME>   -    (" TO CREATE A BRANCH AND SWITCH TO IT ")
 







